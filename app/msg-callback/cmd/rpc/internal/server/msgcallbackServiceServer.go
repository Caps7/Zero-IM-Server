// Code generated by goctl. DO NOT EDIT!
// Source: msgcallback.proto

package server

import (
	"context"

	"github.com/showurl/Zero-IM-Server/app/msg-callback/cmd/rpc/internal/logic"
	"github.com/showurl/Zero-IM-Server/app/msg-callback/cmd/rpc/internal/svc"
	"github.com/showurl/Zero-IM-Server/app/msg-callback/cmd/rpc/pb"
)

type MsgcallbackServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedMsgcallbackServiceServer
}

func NewMsgcallbackServiceServer(svcCtx *svc.ServiceContext) *MsgcallbackServiceServer {
	return &MsgcallbackServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *MsgcallbackServiceServer) CallbackBeforeSendGroupMsg(ctx context.Context, in *pb.CallbackSendGroupMsgReq) (*pb.CommonCallbackResp, error) {
	l := logic.NewCallbackBeforeSendGroupMsgLogic(ctx, s.svcCtx)
	return l.CallbackBeforeSendGroupMsg(in)
}

func (s *MsgcallbackServiceServer) CallbackAfterSendGroupMsg(ctx context.Context, in *pb.CallbackSendGroupMsgReq) (*pb.CommonCallbackResp, error) {
	l := logic.NewCallbackAfterSendGroupMsgLogic(ctx, s.svcCtx)
	return l.CallbackAfterSendGroupMsg(in)
}

func (s *MsgcallbackServiceServer) CallbackBeforeSendSuperGroupMsg(ctx context.Context, in *pb.CallbackSendSuperGroupMsgReq) (*pb.CommonCallbackResp, error) {
	l := logic.NewCallbackBeforeSendSuperGroupMsgLogic(ctx, s.svcCtx)
	return l.CallbackBeforeSendSuperGroupMsg(in)
}

func (s *MsgcallbackServiceServer) CallbackAfterSendSuperGroupMsg(ctx context.Context, in *pb.CallbackSendSuperGroupMsgReq) (*pb.CommonCallbackResp, error) {
	l := logic.NewCallbackAfterSendSuperGroupMsgLogic(ctx, s.svcCtx)
	return l.CallbackAfterSendSuperGroupMsg(in)
}

func (s *MsgcallbackServiceServer) CallbackBeforeSendSingleMsg(ctx context.Context, in *pb.CallbackSendSingleMsgReq) (*pb.CommonCallbackResp, error) {
	l := logic.NewCallbackBeforeSendSingleMsgLogic(ctx, s.svcCtx)
	return l.CallbackBeforeSendSingleMsg(in)
}

func (s *MsgcallbackServiceServer) CallbackAfterSendSingleMsg(ctx context.Context, in *pb.CallbackSendSingleMsgReq) (*pb.CommonCallbackResp, error) {
	l := logic.NewCallbackAfterSendSingleMsgLogic(ctx, s.svcCtx)
	return l.CallbackAfterSendSingleMsg(in)
}

func (s *MsgcallbackServiceServer) CallbackWordFilter(ctx context.Context, in *pb.CallbackWordFilterReq) (*pb.CallbackWordFilterResp, error) {
	l := logic.NewCallbackWordFilterLogic(ctx, s.svcCtx)
	return l.CallbackWordFilter(in)
}

func (s *MsgcallbackServiceServer) CallbackAtAllInSuperGroup(ctx context.Context, in *pb.CallbackAtAllInSuperGroupReq) (*pb.CallbackAtAllInSuperGroupResp, error) {
	l := logic.NewCallbackAtAllInSuperGroupLogic(ctx, s.svcCtx)
	return l.CallbackAtAllInSuperGroup(in)
}
