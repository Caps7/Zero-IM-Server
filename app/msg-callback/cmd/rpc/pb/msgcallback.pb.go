// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: msgcallback.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CallbackCommand int32

const (
	CallbackCommand_None                    CallbackCommand = 0
	CallbackCommand_BeforeSendSingleMsg     CallbackCommand = 1
	CallbackCommand_AfterSendSingleMsg      CallbackCommand = 2
	CallbackCommand_BeforeSendGroupMsg      CallbackCommand = 3
	CallbackCommand_AfterSendGroupMsg       CallbackCommand = 4
	CallbackCommand_BeforeSendSuperGroupMsg CallbackCommand = 5
	CallbackCommand_AfterSendSuperGroupMsg  CallbackCommand = 6
	CallbackCommand_WordFilter              CallbackCommand = 7
	CallbackCommand_AtAllInSuperGroup       CallbackCommand = 8
)

// Enum value maps for CallbackCommand.
var (
	CallbackCommand_name = map[int32]string{
		0: "None",
		1: "BeforeSendSingleMsg",
		2: "AfterSendSingleMsg",
		3: "BeforeSendGroupMsg",
		4: "AfterSendGroupMsg",
		5: "BeforeSendSuperGroupMsg",
		6: "AfterSendSuperGroupMsg",
		7: "WordFilter",
		8: "AtAllInSuperGroup",
	}
	CallbackCommand_value = map[string]int32{
		"None":                    0,
		"BeforeSendSingleMsg":     1,
		"AfterSendSingleMsg":      2,
		"BeforeSendGroupMsg":      3,
		"AfterSendGroupMsg":       4,
		"BeforeSendSuperGroupMsg": 5,
		"AfterSendSuperGroupMsg":  6,
		"WordFilter":              7,
		"AtAllInSuperGroup":       8,
	}
)

func (x CallbackCommand) Enum() *CallbackCommand {
	p := new(CallbackCommand)
	*p = x
	return p
}

func (x CallbackCommand) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallbackCommand) Descriptor() protoreflect.EnumDescriptor {
	return file_msgcallback_proto_enumTypes[0].Descriptor()
}

func (CallbackCommand) Type() protoreflect.EnumType {
	return &file_msgcallback_proto_enumTypes[0]
}

func (x CallbackCommand) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallbackCommand.Descriptor instead.
func (CallbackCommand) EnumDescriptor() ([]byte, []int) {
	return file_msgcallback_proto_rawDescGZIP(), []int{0}
}

type ActionCode int32

const (
	ActionCode_Forbidden ActionCode = 0
)

// Enum value maps for ActionCode.
var (
	ActionCode_name = map[int32]string{
		0: "Forbidden",
	}
	ActionCode_value = map[string]int32{
		"Forbidden": 0,
	}
)

func (x ActionCode) Enum() *ActionCode {
	p := new(ActionCode)
	*p = x
	return p
}

func (x ActionCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionCode) Descriptor() protoreflect.EnumDescriptor {
	return file_msgcallback_proto_enumTypes[1].Descriptor()
}

func (ActionCode) Type() protoreflect.EnumType {
	return &file_msgcallback_proto_enumTypes[1]
}

func (x ActionCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionCode.Descriptor instead.
func (ActionCode) EnumDescriptor() ([]byte, []int) {
	return file_msgcallback_proto_rawDescGZIP(), []int{1}
}

type ErrCode int32

const (
	ErrCode_HandleSuccess ErrCode = 0
	ErrCode_HandleFailed  ErrCode = 1
)

// Enum value maps for ErrCode.
var (
	ErrCode_name = map[int32]string{
		0: "HandleSuccess",
		1: "HandleFailed",
	}
	ErrCode_value = map[string]int32{
		"HandleSuccess": 0,
		"HandleFailed":  1,
	}
)

func (x ErrCode) Enum() *ErrCode {
	p := new(ErrCode)
	*p = x
	return p
}

func (x ErrCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrCode) Descriptor() protoreflect.EnumDescriptor {
	return file_msgcallback_proto_enumTypes[2].Descriptor()
}

func (ErrCode) Type() protoreflect.EnumType {
	return &file_msgcallback_proto_enumTypes[2]
}

func (x ErrCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrCode.Descriptor instead.
func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return file_msgcallback_proto_rawDescGZIP(), []int{2}
}

type CommonCallbackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendID           string          `protobuf:"bytes,1,opt,name=SendID,proto3" json:"SendID,omitempty"`
	CallbackCommand  CallbackCommand `protobuf:"varint,2,opt,name=CallbackCommand,proto3,enum=pb.CallbackCommand" json:"CallbackCommand,omitempty"`
	ServerMsgID      string          `protobuf:"bytes,3,opt,name=ServerMsgID,proto3" json:"ServerMsgID,omitempty"`
	ClientMsgID      string          `protobuf:"bytes,4,opt,name=ClientMsgID,proto3" json:"ClientMsgID,omitempty"`
	SenderPlatformID int32           `protobuf:"varint,6,opt,name=SenderPlatformID,proto3" json:"SenderPlatformID,omitempty"`
	SenderNickname   string          `protobuf:"bytes,7,opt,name=SenderNickname,proto3" json:"SenderNickname,omitempty"`
	SessionType      int32           `protobuf:"varint,8,opt,name=SessionType,proto3" json:"SessionType,omitempty"`
	MsgFrom          int32           `protobuf:"varint,9,opt,name=MsgFrom,proto3" json:"MsgFrom,omitempty"`
	ContentType      int32           `protobuf:"varint,10,opt,name=ContentType,proto3" json:"ContentType,omitempty"`
	Status           int32           `protobuf:"varint,11,opt,name=Status,proto3" json:"Status,omitempty"`
	CreateTime       int64           `protobuf:"varint,12,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	Content          string          `protobuf:"bytes,13,opt,name=Content,proto3" json:"Content,omitempty"`
}

func (x *CommonCallbackReq) Reset() {
	*x = CommonCallbackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgcallback_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonCallbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonCallbackReq) ProtoMessage() {}

func (x *CommonCallbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_msgcallback_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonCallbackReq.ProtoReflect.Descriptor instead.
func (*CommonCallbackReq) Descriptor() ([]byte, []int) {
	return file_msgcallback_proto_rawDescGZIP(), []int{0}
}

func (x *CommonCallbackReq) GetSendID() string {
	if x != nil {
		return x.SendID
	}
	return ""
}

func (x *CommonCallbackReq) GetCallbackCommand() CallbackCommand {
	if x != nil {
		return x.CallbackCommand
	}
	return CallbackCommand_None
}

func (x *CommonCallbackReq) GetServerMsgID() string {
	if x != nil {
		return x.ServerMsgID
	}
	return ""
}

func (x *CommonCallbackReq) GetClientMsgID() string {
	if x != nil {
		return x.ClientMsgID
	}
	return ""
}

func (x *CommonCallbackReq) GetSenderPlatformID() int32 {
	if x != nil {
		return x.SenderPlatformID
	}
	return 0
}

func (x *CommonCallbackReq) GetSenderNickname() string {
	if x != nil {
		return x.SenderNickname
	}
	return ""
}

func (x *CommonCallbackReq) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *CommonCallbackReq) GetMsgFrom() int32 {
	if x != nil {
		return x.MsgFrom
	}
	return 0
}

func (x *CommonCallbackReq) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *CommonCallbackReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CommonCallbackReq) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CommonCallbackReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CommonCallbackResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionCode ActionCode `protobuf:"varint,1,opt,name=ActionCode,proto3,enum=pb.ActionCode" json:"ActionCode,omitempty"`
	ErrCode    ErrCode    `protobuf:"varint,2,opt,name=ErrCode,proto3,enum=pb.ErrCode" json:"ErrCode,omitempty"`
	ErrMsg     string     `protobuf:"bytes,3,opt,name=ErrMsg,proto3" json:"ErrMsg,omitempty"`
}

func (x *CommonCallbackResp) Reset() {
	*x = CommonCallbackResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgcallback_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonCallbackResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonCallbackResp) ProtoMessage() {}

func (x *CommonCallbackResp) ProtoReflect() protoreflect.Message {
	mi := &file_msgcallback_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonCallbackResp.ProtoReflect.Descriptor instead.
func (*CommonCallbackResp) Descriptor() ([]byte, []int) {
	return file_msgcallback_proto_rawDescGZIP(), []int{1}
}

func (x *CommonCallbackResp) GetActionCode() ActionCode {
	if x != nil {
		return x.ActionCode
	}
	return ActionCode_Forbidden
}

func (x *CommonCallbackResp) GetErrCode() ErrCode {
	if x != nil {
		return x.ErrCode
	}
	return ErrCode_HandleSuccess
}

func (x *CommonCallbackResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type CallbackSendGroupMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonCallbackReq *CommonCallbackReq `protobuf:"bytes,1,opt,name=CommonCallbackReq,proto3" json:"CommonCallbackReq,omitempty"`
	GroupID           string             `protobuf:"bytes,2,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
}

func (x *CallbackSendGroupMsgReq) Reset() {
	*x = CallbackSendGroupMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgcallback_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackSendGroupMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackSendGroupMsgReq) ProtoMessage() {}

func (x *CallbackSendGroupMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_msgcallback_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackSendGroupMsgReq.ProtoReflect.Descriptor instead.
func (*CallbackSendGroupMsgReq) Descriptor() ([]byte, []int) {
	return file_msgcallback_proto_rawDescGZIP(), []int{2}
}

func (x *CallbackSendGroupMsgReq) GetCommonCallbackReq() *CommonCallbackReq {
	if x != nil {
		return x.CommonCallbackReq
	}
	return nil
}

func (x *CallbackSendGroupMsgReq) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

type CallbackSendSuperGroupMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonCallbackReq *CommonCallbackReq `protobuf:"bytes,1,opt,name=CommonCallbackReq,proto3" json:"CommonCallbackReq,omitempty"`
	SuperGroupID      string             `protobuf:"bytes,2,opt,name=SuperGroupID,proto3" json:"SuperGroupID,omitempty"`
}

func (x *CallbackSendSuperGroupMsgReq) Reset() {
	*x = CallbackSendSuperGroupMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgcallback_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackSendSuperGroupMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackSendSuperGroupMsgReq) ProtoMessage() {}

func (x *CallbackSendSuperGroupMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_msgcallback_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackSendSuperGroupMsgReq.ProtoReflect.Descriptor instead.
func (*CallbackSendSuperGroupMsgReq) Descriptor() ([]byte, []int) {
	return file_msgcallback_proto_rawDescGZIP(), []int{3}
}

func (x *CallbackSendSuperGroupMsgReq) GetCommonCallbackReq() *CommonCallbackReq {
	if x != nil {
		return x.CommonCallbackReq
	}
	return nil
}

func (x *CallbackSendSuperGroupMsgReq) GetSuperGroupID() string {
	if x != nil {
		return x.SuperGroupID
	}
	return ""
}

type CallbackSendSingleMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonCallbackReq *CommonCallbackReq `protobuf:"bytes,1,opt,name=CommonCallbackReq,proto3" json:"CommonCallbackReq,omitempty"`
	RecvID            string             `protobuf:"bytes,2,opt,name=RecvID,proto3" json:"RecvID,omitempty"`
}

func (x *CallbackSendSingleMsgReq) Reset() {
	*x = CallbackSendSingleMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgcallback_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackSendSingleMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackSendSingleMsgReq) ProtoMessage() {}

func (x *CallbackSendSingleMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_msgcallback_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackSendSingleMsgReq.ProtoReflect.Descriptor instead.
func (*CallbackSendSingleMsgReq) Descriptor() ([]byte, []int) {
	return file_msgcallback_proto_rawDescGZIP(), []int{4}
}

func (x *CallbackSendSingleMsgReq) GetCommonCallbackReq() *CommonCallbackReq {
	if x != nil {
		return x.CommonCallbackReq
	}
	return nil
}

func (x *CallbackSendSingleMsgReq) GetRecvID() string {
	if x != nil {
		return x.RecvID
	}
	return ""
}

type CallbackWordFilterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonCallbackReq *CommonCallbackReq `protobuf:"bytes,1,opt,name=CommonCallbackReq,proto3" json:"CommonCallbackReq,omitempty"`
}

func (x *CallbackWordFilterReq) Reset() {
	*x = CallbackWordFilterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgcallback_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackWordFilterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackWordFilterReq) ProtoMessage() {}

func (x *CallbackWordFilterReq) ProtoReflect() protoreflect.Message {
	mi := &file_msgcallback_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackWordFilterReq.ProtoReflect.Descriptor instead.
func (*CallbackWordFilterReq) Descriptor() ([]byte, []int) {
	return file_msgcallback_proto_rawDescGZIP(), []int{5}
}

func (x *CallbackWordFilterReq) GetCommonCallbackReq() *CommonCallbackReq {
	if x != nil {
		return x.CommonCallbackReq
	}
	return nil
}

type CallbackWordFilterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonCallbackResp *CommonCallbackResp `protobuf:"bytes,1,opt,name=CommonCallbackResp,proto3" json:"CommonCallbackResp,omitempty"`
	ReplaceContent     string              `protobuf:"bytes,2,opt,name=ReplaceContent,proto3" json:"ReplaceContent,omitempty"`
}

func (x *CallbackWordFilterResp) Reset() {
	*x = CallbackWordFilterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgcallback_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackWordFilterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackWordFilterResp) ProtoMessage() {}

func (x *CallbackWordFilterResp) ProtoReflect() protoreflect.Message {
	mi := &file_msgcallback_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackWordFilterResp.ProtoReflect.Descriptor instead.
func (*CallbackWordFilterResp) Descriptor() ([]byte, []int) {
	return file_msgcallback_proto_rawDescGZIP(), []int{6}
}

func (x *CallbackWordFilterResp) GetCommonCallbackResp() *CommonCallbackResp {
	if x != nil {
		return x.CommonCallbackResp
	}
	return nil
}

func (x *CallbackWordFilterResp) GetReplaceContent() string {
	if x != nil {
		return x.ReplaceContent
	}
	return ""
}

type CallbackAtAllInSuperGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonCallbackReq *CommonCallbackReq `protobuf:"bytes,1,opt,name=CommonCallbackReq,proto3" json:"CommonCallbackReq,omitempty"`
	SuperGroupID      string             `protobuf:"bytes,2,opt,name=SuperGroupID,proto3" json:"SuperGroupID,omitempty"`
}

func (x *CallbackAtAllInSuperGroupReq) Reset() {
	*x = CallbackAtAllInSuperGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgcallback_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackAtAllInSuperGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackAtAllInSuperGroupReq) ProtoMessage() {}

func (x *CallbackAtAllInSuperGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_msgcallback_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackAtAllInSuperGroupReq.ProtoReflect.Descriptor instead.
func (*CallbackAtAllInSuperGroupReq) Descriptor() ([]byte, []int) {
	return file_msgcallback_proto_rawDescGZIP(), []int{7}
}

func (x *CallbackAtAllInSuperGroupReq) GetCommonCallbackReq() *CommonCallbackReq {
	if x != nil {
		return x.CommonCallbackReq
	}
	return nil
}

func (x *CallbackAtAllInSuperGroupReq) GetSuperGroupID() string {
	if x != nil {
		return x.SuperGroupID
	}
	return ""
}

type CallbackAtAllInSuperGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonCallbackResp *CommonCallbackResp `protobuf:"bytes,1,opt,name=CommonCallbackResp,proto3" json:"CommonCallbackResp,omitempty"`
}

func (x *CallbackAtAllInSuperGroupResp) Reset() {
	*x = CallbackAtAllInSuperGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msgcallback_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackAtAllInSuperGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackAtAllInSuperGroupResp) ProtoMessage() {}

func (x *CallbackAtAllInSuperGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_msgcallback_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackAtAllInSuperGroupResp.ProtoReflect.Descriptor instead.
func (*CallbackAtAllInSuperGroupResp) Descriptor() ([]byte, []int) {
	return file_msgcallback_proto_rawDescGZIP(), []int{8}
}

func (x *CallbackAtAllInSuperGroupResp) GetCommonCallbackResp() *CommonCallbackResp {
	if x != nil {
		return x.CommonCallbackResp
	}
	return nil
}

var File_msgcallback_proto protoreflect.FileDescriptor

var file_msgcallback_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6d, 0x73, 0x67, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xb2, 0x03, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x65, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x3d, 0x0a, 0x0f, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x0f, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73,
	0x67, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x4d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x4d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x4d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x83, 0x01, 0x0a,
	0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72,
	0x72, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x4d,
	0x73, 0x67, 0x22, 0x78, 0x0a, 0x17, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x65,
	0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x43, 0x0a,
	0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x52,
	0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0x87, 0x01, 0x0a,
	0x1c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x43, 0x0a,
	0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x52,
	0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0x77, 0x0a, 0x18, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x43, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x52, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x76, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x63, 0x76, 0x49, 0x44, 0x22,
	0x5c, 0x0a, 0x15, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x57, 0x6f, 0x72, 0x64, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x43, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x52, 0x11, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x22, 0x88, 0x01,
	0x0a, 0x16, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x57, 0x6f, 0x72, 0x64, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x52, 0x12, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x1c, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x74, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x43, 0x0a, 0x11, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x52, 0x11, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x22,
	0x0a, 0x0c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x44, 0x22, 0x67, 0x0a, 0x1d, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x74,
	0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x52, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x2a, 0xdb, 0x01, 0x0a, 0x0f,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x73, 0x67,
	0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67,
	0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x42, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x73, 0x67, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53,
	0x65, 0x6e, 0x64, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67,
	0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x10, 0x07, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x74, 0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x08, 0x2a, 0x1b, 0x0a, 0x0a, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x6f, 0x72, 0x62, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x10, 0x00, 0x2a, 0x2e, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x11, 0x0a, 0x0d, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x10, 0x01, 0x32, 0xca, 0x05, 0x0a, 0x12, 0x6d, 0x73, 0x67, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a,
	0x1a, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x53,
	0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x1b, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x50, 0x0a, 0x19, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x1b, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x6e, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x5b, 0x0a, 0x1f, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x5a, 0x0a, 0x1e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x53, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73,
	0x67, 0x12, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53,
	0x65, 0x6e, 0x64, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a, 0x1b, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x6e,
	0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x52, 0x0a, 0x1a, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x1c,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x65, 0x6e, 0x64,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x57, 0x6f, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x57, 0x6f, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x57, 0x6f, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x60, 0x0a, 0x19, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x74, 0x41,
	0x6c, 0x6c, 0x49, 0x6e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x20,
	0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x74, 0x41, 0x6c,
	0x6c, 0x49, 0x6e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x1a, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x74,
	0x41, 0x6c, 0x6c, 0x49, 0x6e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_msgcallback_proto_rawDescOnce sync.Once
	file_msgcallback_proto_rawDescData = file_msgcallback_proto_rawDesc
)

func file_msgcallback_proto_rawDescGZIP() []byte {
	file_msgcallback_proto_rawDescOnce.Do(func() {
		file_msgcallback_proto_rawDescData = protoimpl.X.CompressGZIP(file_msgcallback_proto_rawDescData)
	})
	return file_msgcallback_proto_rawDescData
}

var file_msgcallback_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_msgcallback_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_msgcallback_proto_goTypes = []interface{}{
	(CallbackCommand)(0),                  // 0: pb.CallbackCommand
	(ActionCode)(0),                       // 1: pb.ActionCode
	(ErrCode)(0),                          // 2: pb.ErrCode
	(*CommonCallbackReq)(nil),             // 3: pb.CommonCallbackReq
	(*CommonCallbackResp)(nil),            // 4: pb.CommonCallbackResp
	(*CallbackSendGroupMsgReq)(nil),       // 5: pb.CallbackSendGroupMsgReq
	(*CallbackSendSuperGroupMsgReq)(nil),  // 6: pb.CallbackSendSuperGroupMsgReq
	(*CallbackSendSingleMsgReq)(nil),      // 7: pb.CallbackSendSingleMsgReq
	(*CallbackWordFilterReq)(nil),         // 8: pb.CallbackWordFilterReq
	(*CallbackWordFilterResp)(nil),        // 9: pb.CallbackWordFilterResp
	(*CallbackAtAllInSuperGroupReq)(nil),  // 10: pb.CallbackAtAllInSuperGroupReq
	(*CallbackAtAllInSuperGroupResp)(nil), // 11: pb.CallbackAtAllInSuperGroupResp
}
var file_msgcallback_proto_depIdxs = []int32{
	0,  // 0: pb.CommonCallbackReq.CallbackCommand:type_name -> pb.CallbackCommand
	1,  // 1: pb.CommonCallbackResp.ActionCode:type_name -> pb.ActionCode
	2,  // 2: pb.CommonCallbackResp.ErrCode:type_name -> pb.ErrCode
	3,  // 3: pb.CallbackSendGroupMsgReq.CommonCallbackReq:type_name -> pb.CommonCallbackReq
	3,  // 4: pb.CallbackSendSuperGroupMsgReq.CommonCallbackReq:type_name -> pb.CommonCallbackReq
	3,  // 5: pb.CallbackSendSingleMsgReq.CommonCallbackReq:type_name -> pb.CommonCallbackReq
	3,  // 6: pb.CallbackWordFilterReq.CommonCallbackReq:type_name -> pb.CommonCallbackReq
	4,  // 7: pb.CallbackWordFilterResp.CommonCallbackResp:type_name -> pb.CommonCallbackResp
	3,  // 8: pb.CallbackAtAllInSuperGroupReq.CommonCallbackReq:type_name -> pb.CommonCallbackReq
	4,  // 9: pb.CallbackAtAllInSuperGroupResp.CommonCallbackResp:type_name -> pb.CommonCallbackResp
	5,  // 10: pb.msgcallbackService.CallbackBeforeSendGroupMsg:input_type -> pb.CallbackSendGroupMsgReq
	5,  // 11: pb.msgcallbackService.CallbackAfterSendGroupMsg:input_type -> pb.CallbackSendGroupMsgReq
	6,  // 12: pb.msgcallbackService.CallbackBeforeSendSuperGroupMsg:input_type -> pb.CallbackSendSuperGroupMsgReq
	6,  // 13: pb.msgcallbackService.CallbackAfterSendSuperGroupMsg:input_type -> pb.CallbackSendSuperGroupMsgReq
	7,  // 14: pb.msgcallbackService.CallbackBeforeSendSingleMsg:input_type -> pb.CallbackSendSingleMsgReq
	7,  // 15: pb.msgcallbackService.CallbackAfterSendSingleMsg:input_type -> pb.CallbackSendSingleMsgReq
	8,  // 16: pb.msgcallbackService.CallbackWordFilter:input_type -> pb.CallbackWordFilterReq
	10, // 17: pb.msgcallbackService.CallbackAtAllInSuperGroup:input_type -> pb.CallbackAtAllInSuperGroupReq
	4,  // 18: pb.msgcallbackService.CallbackBeforeSendGroupMsg:output_type -> pb.CommonCallbackResp
	4,  // 19: pb.msgcallbackService.CallbackAfterSendGroupMsg:output_type -> pb.CommonCallbackResp
	4,  // 20: pb.msgcallbackService.CallbackBeforeSendSuperGroupMsg:output_type -> pb.CommonCallbackResp
	4,  // 21: pb.msgcallbackService.CallbackAfterSendSuperGroupMsg:output_type -> pb.CommonCallbackResp
	4,  // 22: pb.msgcallbackService.CallbackBeforeSendSingleMsg:output_type -> pb.CommonCallbackResp
	4,  // 23: pb.msgcallbackService.CallbackAfterSendSingleMsg:output_type -> pb.CommonCallbackResp
	9,  // 24: pb.msgcallbackService.CallbackWordFilter:output_type -> pb.CallbackWordFilterResp
	11, // 25: pb.msgcallbackService.CallbackAtAllInSuperGroup:output_type -> pb.CallbackAtAllInSuperGroupResp
	18, // [18:26] is the sub-list for method output_type
	10, // [10:18] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_msgcallback_proto_init() }
func file_msgcallback_proto_init() {
	if File_msgcallback_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_msgcallback_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonCallbackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msgcallback_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonCallbackResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msgcallback_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackSendGroupMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msgcallback_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackSendSuperGroupMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msgcallback_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackSendSingleMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msgcallback_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackWordFilterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msgcallback_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackWordFilterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msgcallback_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackAtAllInSuperGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msgcallback_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackAtAllInSuperGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msgcallback_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_msgcallback_proto_goTypes,
		DependencyIndexes: file_msgcallback_proto_depIdxs,
		EnumInfos:         file_msgcallback_proto_enumTypes,
		MessageInfos:      file_msgcallback_proto_msgTypes,
	}.Build()
	File_msgcallback_proto = out.File
	file_msgcallback_proto_rawDesc = nil
	file_msgcallback_proto_goTypes = nil
	file_msgcallback_proto_depIdxs = nil
}
