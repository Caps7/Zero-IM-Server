// Code generated by goctl. DO NOT EDIT!
// Source: conversation.proto

package conversationservice

import (
	"context"

	"github.com/showurl/Zero-IM-Server/app/conversation/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CommonResp                  = pb.CommonResp
	Conversation                = pb.Conversation
	ModifyConversationFieldReq  = pb.ModifyConversationFieldReq
	ModifyConversationFieldResp = pb.ModifyConversationFieldResp

	ConversationService interface {
		ModifyConversationField(ctx context.Context, in *ModifyConversationFieldReq, opts ...grpc.CallOption) (*ModifyConversationFieldResp, error)
	}

	defaultConversationService struct {
		cli zrpc.Client
	}
)

func NewConversationService(cli zrpc.Client) ConversationService {
	return &defaultConversationService{
		cli: cli,
	}
}

func (m *defaultConversationService) ModifyConversationField(ctx context.Context, in *ModifyConversationFieldReq, opts ...grpc.CallOption) (*ModifyConversationFieldResp, error) {
	client := pb.NewConversationServiceClient(m.cli.Conn())
	return client.ModifyConversationField(ctx, in, opts...)
}
