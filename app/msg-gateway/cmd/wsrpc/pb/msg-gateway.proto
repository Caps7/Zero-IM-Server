syntax = "proto3";

option go_package = "./pb";

message OfflinePushInfo{
  string title = 1;
  string desc = 2;
  string ex = 3;
  string iOSPushSound = 4;
  bool iOSBadgeCount = 5;
}


message MsgData {
  string  sendID = 1;
  string  recvID = 2;
  string groupID = 3;
  string clientMsgID = 4;
  string serverMsgID = 5;
  int32 senderPlatformID = 6;
  string  senderNickname = 7;
  string  senderFaceURL = 8;
  int32   sessionType = 9;
  int32 msgFrom = 10;
  int32 contentType = 11;
  bytes content = 12;
  uint32 seq = 14;
  int64 sendTime = 15;
  int64 createTime = 16;
  int32 status = 17;
  map<string, bool> options = 18;
  OfflinePushInfo offlinePushInfo = 19;
  repeated string atUserIDList = 20;

}
package msg_gateway;

message OnlinePushMsgReq {
  MsgData msgData = 2;
  string pushToUserID = 3;
}

message OnlinePushMsgResp{
  repeated SingleMsgToUser resp = 1;
}

message SingleMsgToUser{
  int64   ResultCode = 1;
  string  RecvID = 2;
  int32   RecvPlatFormID = 3;
}

message GetUsersOnlineStatusReq{
  repeated string  userIDList = 1;
  string  operationID = 2;
  string opUserID = 3;
}

message GetUsersOnlineStatusResp{
  int32  errCode = 1;
  string errMsg = 2;
  repeated SuccessResult successResult = 3;
  repeated FailedDetail failedResult = 4;
  message SuccessDetail{
    string platform = 1;
    string status = 2;
  }
  message FailedDetail{
    string userID = 3;
    int32  errCode = 1;
    string errMsg = 2;
  }
  message SuccessResult{
    string userID = 1;
    string status = 2;
    repeated SuccessDetail detailPlatformStatus = 3;
  }
}
service OnlineMessageRelayService {
  rpc OnlinePushMsg(OnlinePushMsgReq) returns(OnlinePushMsgResp);
  rpc GetUsersOnlineStatus(GetUsersOnlineStatusReq)returns(GetUsersOnlineStatusResp);
  //  rpc SendMsgByWS(SendMsgByWSReq)  returns(MsgToUserResp);
}

